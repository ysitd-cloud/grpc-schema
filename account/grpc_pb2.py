# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: account/grpc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from account.actions import account_pb2 as account_dot_actions_dot_account__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='account/grpc.proto',
  package='account',
  syntax='proto3',
  serialized_pb=_b('\n\x12\x61\x63\x63ount/grpc.proto\x12\x07\x61\x63\x63ount\x1a\x1d\x61\x63\x63ount/actions/account.proto2]\n\x07\x41\x63\x63ount\x12R\n\x14validateUserPassword\x12\x1c.account.ValidateUserRequest\x1a\x1a.account.ValidateUserReply\"\x00\x42V\n\x18\x63loud.ysitd.grpc.accountB\x0c\x41\x63\x63ountProtoP\x01Z*github.com/ysitd-cloud/grpc-schema/accountb\x06proto3')
  ,
  dependencies=[account_dot_actions_dot_account__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\030cloud.ysitd.grpc.accountB\014AccountProtoP\001Z*github.com/ysitd-cloud/grpc-schema/account'))

_ACCOUNT = _descriptor.ServiceDescriptor(
  name='Account',
  full_name='account.Account',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=62,
  serialized_end=155,
  methods=[
  _descriptor.MethodDescriptor(
    name='validateUserPassword',
    full_name='account.Account.validateUserPassword',
    index=0,
    containing_service=None,
    input_type=account_dot_actions_dot_account__pb2._VALIDATEUSERREQUEST,
    output_type=account_dot_actions_dot_account__pb2._VALIDATEUSERREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ACCOUNT)

DESCRIPTOR.services_by_name['Account'] = _ACCOUNT

# @@protoc_insertion_point(module_scope)
