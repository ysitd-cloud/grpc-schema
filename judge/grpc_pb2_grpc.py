# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from judge.actions import judge_pb2 as judge_dot_actions_dot_judge__pb2
from judge.models import types_pb2 as judge_dot_models_dot_types__pb2


class JudgeStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.createSubject = channel.unary_unary(
        '/judge.Judge/createSubject',
        request_serializer=judge_dot_models_dot_types__pb2.Subject.SerializeToString,
        response_deserializer=judge_dot_models_dot_types__pb2.SubjectMutationReply.FromString,
        )
    self.deleteSubject = channel.unary_unary(
        '/judge.Judge/deleteSubject',
        request_serializer=judge_dot_models_dot_types__pb2.SubjectSelector.SerializeToString,
        response_deserializer=judge_dot_models_dot_types__pb2.SubjectMutationReply.FromString,
        )
    self.updateSubject = channel.unary_unary(
        '/judge.Judge/updateSubject',
        request_serializer=judge_dot_models_dot_types__pb2.UpdateSubjectRequest.SerializeToString,
        response_deserializer=judge_dot_models_dot_types__pb2.SubjectMutationReply.FromString,
        )
    self.getSubject = channel.unary_unary(
        '/judge.Judge/getSubject',
        request_serializer=judge_dot_models_dot_types__pb2.SubjectSelector.SerializeToString,
        response_deserializer=judge_dot_models_dot_types__pb2.Subject.FromString,
        )
    self.getResource = channel.unary_unary(
        '/judge.Judge/getResource',
        request_serializer=judge_dot_models_dot_types__pb2.ResourceSelector.SerializeToString,
        response_deserializer=judge_dot_models_dot_types__pb2.Resource.FromString,
        )
    self.deleteResource = channel.unary_unary(
        '/judge.Judge/deleteResource',
        request_serializer=judge_dot_models_dot_types__pb2.ResourceSelector.SerializeToString,
        response_deserializer=judge_dot_models_dot_types__pb2.ResourceMutationReply.FromString,
        )
    self.updateResource = channel.unary_unary(
        '/judge.Judge/updateResource',
        request_serializer=judge_dot_models_dot_types__pb2.UpdateResourceRequest.SerializeToString,
        response_deserializer=judge_dot_models_dot_types__pb2.ResourceMutationReply.FromString,
        )
    self.createResource = channel.unary_unary(
        '/judge.Judge/createResource',
        request_serializer=judge_dot_models_dot_types__pb2.Resource.SerializeToString,
        response_deserializer=judge_dot_models_dot_types__pb2.ResourceMutationReply.FromString,
        )
    self.validatePolicy = channel.unary_unary(
        '/judge.Judge/validatePolicy',
        request_serializer=judge_dot_actions_dot_judge__pb2.AccessRequest.SerializeToString,
        response_deserializer=judge_dot_actions_dot_judge__pb2.AccessReply.FromString,
        )


class JudgeServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def createSubject(self, request, context):
    """Subject CURD
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteSubject(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateSubject(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getSubject(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getResource(self, request, context):
    """Resource CURD
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteResource(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateResource(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def createResource(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def validatePolicy(self, request, context):
    """Judge Service
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_JudgeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'createSubject': grpc.unary_unary_rpc_method_handler(
          servicer.createSubject,
          request_deserializer=judge_dot_models_dot_types__pb2.Subject.FromString,
          response_serializer=judge_dot_models_dot_types__pb2.SubjectMutationReply.SerializeToString,
      ),
      'deleteSubject': grpc.unary_unary_rpc_method_handler(
          servicer.deleteSubject,
          request_deserializer=judge_dot_models_dot_types__pb2.SubjectSelector.FromString,
          response_serializer=judge_dot_models_dot_types__pb2.SubjectMutationReply.SerializeToString,
      ),
      'updateSubject': grpc.unary_unary_rpc_method_handler(
          servicer.updateSubject,
          request_deserializer=judge_dot_models_dot_types__pb2.UpdateSubjectRequest.FromString,
          response_serializer=judge_dot_models_dot_types__pb2.SubjectMutationReply.SerializeToString,
      ),
      'getSubject': grpc.unary_unary_rpc_method_handler(
          servicer.getSubject,
          request_deserializer=judge_dot_models_dot_types__pb2.SubjectSelector.FromString,
          response_serializer=judge_dot_models_dot_types__pb2.Subject.SerializeToString,
      ),
      'getResource': grpc.unary_unary_rpc_method_handler(
          servicer.getResource,
          request_deserializer=judge_dot_models_dot_types__pb2.ResourceSelector.FromString,
          response_serializer=judge_dot_models_dot_types__pb2.Resource.SerializeToString,
      ),
      'deleteResource': grpc.unary_unary_rpc_method_handler(
          servicer.deleteResource,
          request_deserializer=judge_dot_models_dot_types__pb2.ResourceSelector.FromString,
          response_serializer=judge_dot_models_dot_types__pb2.ResourceMutationReply.SerializeToString,
      ),
      'updateResource': grpc.unary_unary_rpc_method_handler(
          servicer.updateResource,
          request_deserializer=judge_dot_models_dot_types__pb2.UpdateResourceRequest.FromString,
          response_serializer=judge_dot_models_dot_types__pb2.ResourceMutationReply.SerializeToString,
      ),
      'createResource': grpc.unary_unary_rpc_method_handler(
          servicer.createResource,
          request_deserializer=judge_dot_models_dot_types__pb2.Resource.FromString,
          response_serializer=judge_dot_models_dot_types__pb2.ResourceMutationReply.SerializeToString,
      ),
      'validatePolicy': grpc.unary_unary_rpc_method_handler(
          servicer.validatePolicy,
          request_deserializer=judge_dot_actions_dot_judge__pb2.AccessRequest.FromString,
          response_serializer=judge_dot_actions_dot_judge__pb2.AccessReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'judge.Judge', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
