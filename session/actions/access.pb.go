// Code generated by protoc-gen-go. DO NOT EDIT.
// source: session/actions/access.proto

/*
Package actions is a generated protocol buffer package.

It is generated from these files:
	session/actions/access.proto

It has these top-level messages:
	CreateSessoinRequest
	CreateSessionReply
	GetSessionRequest
	GetSessionReply
	UpdateSessionRequest
	UpdateSessionReply
	DeleteSessionRequest
	DeleteSessionReply
*/
package actions

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import session "github.com/ysitd-cloud/grpc-schema/session/models"
import session1 "github.com/ysitd-cloud/grpc-schema/session/models"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateSessoinRequest struct {
	Service *session.Service         `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Session *session1.SessionContent `protobuf:"bytes,2,opt,name=session" json:"session,omitempty"`
}

func (m *CreateSessoinRequest) Reset()                    { *m = CreateSessoinRequest{} }
func (m *CreateSessoinRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSessoinRequest) ProtoMessage()               {}
func (*CreateSessoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateSessoinRequest) GetService() *session.Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *CreateSessoinRequest) GetSession() *session1.SessionContent {
	if m != nil {
		return m.Session
	}
	return nil
}

type CreateSessionReply struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateSessionReply) Reset()                    { *m = CreateSessionReply{} }
func (m *CreateSessionReply) String() string            { return proto.CompactTextString(m) }
func (*CreateSessionReply) ProtoMessage()               {}
func (*CreateSessionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateSessionReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetSessionRequest struct {
	Service *session.Service `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Id      string           `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *GetSessionRequest) Reset()                    { *m = GetSessionRequest{} }
func (m *GetSessionRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSessionRequest) ProtoMessage()               {}
func (*GetSessionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetSessionRequest) GetService() *session.Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *GetSessionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetSessionReply struct {
	Exists  bool                     `protobuf:"varint,1,opt,name=exists" json:"exists,omitempty"`
	Session *session1.SessionContent `protobuf:"bytes,2,opt,name=session" json:"session,omitempty"`
}

func (m *GetSessionReply) Reset()                    { *m = GetSessionReply{} }
func (m *GetSessionReply) String() string            { return proto.CompactTextString(m) }
func (*GetSessionReply) ProtoMessage()               {}
func (*GetSessionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetSessionReply) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *GetSessionReply) GetSession() *session1.SessionContent {
	if m != nil {
		return m.Session
	}
	return nil
}

type UpdateSessionRequest struct {
	Service *session.Service         `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Id      string                   `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Content *session1.SessionContent `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
}

func (m *UpdateSessionRequest) Reset()                    { *m = UpdateSessionRequest{} }
func (m *UpdateSessionRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateSessionRequest) ProtoMessage()               {}
func (*UpdateSessionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateSessionRequest) GetService() *session.Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *UpdateSessionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSessionRequest) GetContent() *session1.SessionContent {
	if m != nil {
		return m.Content
	}
	return nil
}

type UpdateSessionReply struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *UpdateSessionReply) Reset()                    { *m = UpdateSessionReply{} }
func (m *UpdateSessionReply) String() string            { return proto.CompactTextString(m) }
func (*UpdateSessionReply) ProtoMessage()               {}
func (*UpdateSessionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateSessionReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type DeleteSessionRequest struct {
	Service *session.Service `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Id      string           `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteSessionRequest) Reset()                    { *m = DeleteSessionRequest{} }
func (m *DeleteSessionRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteSessionRequest) ProtoMessage()               {}
func (*DeleteSessionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteSessionRequest) GetService() *session.Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *DeleteSessionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteSessionReply struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *DeleteSessionReply) Reset()                    { *m = DeleteSessionReply{} }
func (m *DeleteSessionReply) String() string            { return proto.CompactTextString(m) }
func (*DeleteSessionReply) ProtoMessage()               {}
func (*DeleteSessionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteSessionReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*CreateSessoinRequest)(nil), "session.CreateSessoinRequest")
	proto.RegisterType((*CreateSessionReply)(nil), "session.CreateSessionReply")
	proto.RegisterType((*GetSessionRequest)(nil), "session.GetSessionRequest")
	proto.RegisterType((*GetSessionReply)(nil), "session.GetSessionReply")
	proto.RegisterType((*UpdateSessionRequest)(nil), "session.UpdateSessionRequest")
	proto.RegisterType((*UpdateSessionReply)(nil), "session.UpdateSessionReply")
	proto.RegisterType((*DeleteSessionRequest)(nil), "session.DeleteSessionRequest")
	proto.RegisterType((*DeleteSessionReply)(nil), "session.DeleteSessionReply")
}

func init() { proto.RegisterFile("session/actions/access.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x5d, 0x4b, 0xc3, 0x30,
	0x14, 0x86, 0x69, 0x85, 0x4d, 0x8f, 0xe0, 0x47, 0x19, 0x5a, 0xc4, 0x0b, 0x29, 0x5e, 0x88, 0xb0,
	0x06, 0xe7, 0x3f, 0x70, 0x82, 0x97, 0x8e, 0x0c, 0x6f, 0xc4, 0x9b, 0x2e, 0x39, 0x6c, 0x81, 0x2e,
	0xa9, 0x3d, 0xa9, 0xb8, 0x1f, 0xe0, 0xff, 0x96, 0xa6, 0xcd, 0x1c, 0x45, 0x14, 0x3f, 0xae, 0x4a,
	0x7a, 0x9e, 0xbe, 0xef, 0x73, 0x20, 0x85, 0x53, 0x42, 0x22, 0x65, 0x34, 0xcb, 0x84, 0x55, 0x46,
	0x13, 0xcb, 0x84, 0x40, 0xa2, 0xb4, 0x28, 0x8d, 0x35, 0x51, 0xbf, 0x9d, 0x9e, 0xac, 0xb1, 0xa5,
	0x91, 0x98, 0x13, 0x23, 0x2c, 0x5f, 0x94, 0xc0, 0x06, 0xfb, 0x64, 0xea, 0x8e, 0xcd, 0x34, 0xa9,
	0x60, 0x30, 0x2e, 0x31, 0xb3, 0x38, 0x45, 0x22, 0xa3, 0x34, 0xc7, 0xe7, 0x0a, 0xc9, 0x46, 0x97,
	0xd0, 0x6f, 0x63, 0xe2, 0xe0, 0x2c, 0xb8, 0xd8, 0x1d, 0x1d, 0xa4, 0xfe, 0xc3, 0x69, 0xf3, 0x9e,
	0x7b, 0x20, 0xba, 0x02, 0xaf, 0x12, 0x87, 0x8e, 0x3d, 0xde, 0x60, 0xdd, 0x73, 0x6c, 0xb4, 0x45,
	0x6d, 0xb9, 0xe7, 0x92, 0x73, 0x88, 0x3e, 0x6a, 0x95, 0xd1, 0x1c, 0x8b, 0x7c, 0x15, 0xed, 0x41,
	0xa8, 0xa4, 0xeb, 0xdb, 0xe1, 0xa1, 0x92, 0xc9, 0x3d, 0x1c, 0xde, 0xa1, 0x5d, 0x23, 0x3f, 0x37,
	0x6b, 0x02, 0xc3, 0x75, 0xe0, 0x13, 0xec, 0x6f, 0x06, 0xd6, 0x9d, 0x47, 0xd0, 0xc3, 0x57, 0x45,
	0x96, 0x5c, 0xda, 0x36, 0x6f, 0x4f, 0xbf, 0x59, 0xea, 0x2d, 0x80, 0xc1, 0x43, 0x21, 0x37, 0xb7,
	0xfa, 0xb3, 0x72, 0xed, 0x21, 0x9a, 0xa2, 0x78, 0xeb, 0x1b, 0x8f, 0x96, 0x4b, 0x52, 0x88, 0x3a,
	0x1a, 0xf5, 0xa2, 0x31, 0xf4, 0xa9, 0x72, 0xf7, 0xa7, 0xdd, 0xd4, 0x1f, 0x13, 0x0e, 0x83, 0x5b,
	0xcc, 0xf1, 0x3f, 0xb5, 0x6b, 0x87, 0x4e, 0xe6, 0x97, 0x0e, 0x37, 0x13, 0x88, 0x45, 0x6e, 0x2a,
	0x99, 0xae, 0x48, 0x59, 0x99, 0xce, 0xcb, 0x42, 0xf8, 0xb2, 0x49, 0xf0, 0x38, 0x9a, 0x2b, 0xbb,
	0xa8, 0x66, 0xa9, 0x30, 0x4b, 0xe6, 0x80, 0xa1, 0x83, 0x59, 0x8d, 0x0d, 0x49, 0x2c, 0x70, 0x99,
	0xb1, 0xce, 0xbf, 0x32, 0xeb, 0xb9, 0x0b, 0x7e, 0xfd, 0x1e, 0x00, 0x00, 0xff, 0xff, 0xa3, 0xab,
	0x45, 0x8e, 0x45, 0x03, 0x00, 0x00,
}
